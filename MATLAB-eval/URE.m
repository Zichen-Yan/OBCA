clc;
clear;
close all;


X_car_0 = [3,3,3.02,3.04,3.06,3.08,3.1,3.12,3.14,3.16,3.18,3.2,3.22,3.24,3.26,3.28,3.3,3.32,3.34,3.36,3.38,3.4,3.42,3.44,3.46,3.48,3.4938,3.5103,3.5267,3.5348,3.5393,3.5438,3.5483,3.5528,3.5573,3.5611,3.5645,3.5679,3.5712,3.5731,3.575,3.5767,3.5776,3.5785,3.5794,3.5803,3.5809,3.5815,3.5821,3.5827,3.5831,3.5835,3.5839,3.5843,3.5843,3.5839,3.5835,3.5831,3.5827,3.5821,3.5815,3.5809,3.5803,3.5794,3.5785,3.5776,3.5767,3.575,3.5731,3.5712,3.5679,3.5645,3.5611,3.5573,3.5528,3.5483,3.5438,3.5393,3.5348,3.5267,3.5103,3.4938,3.48,3.46,3.44,3.42,3.4,3.38,3.36,3.34,3.32,3.3,3.28,3.26,3.24,3.22,3.2,3.18,3.16,3.14,3.12,3.1,3.08,3.06,3.04,3.02,-1.0148,-1.0151,-1.0154,-1.0156,-1.0159,-1.0163,-1.0166,-1.0136,-1.0104,-1,-0.98,-0.96,-0.94,-0.92,-0.9,-0.88,-0.86,-0.84,-0.8307,-0.8264,-0.823,-0.8198,-0.8165,-0.8107,-0.8044,-0.7981,-0.7881,-0.7772,-0.7653,-0.75,-0.7347,-0.7204,-0.7064,-0.6931,-0.6807,-0.668,-0.65,-0.63,-0.61,-0.59,-0.57,-0.55,-0.53,-0.51,-0.49,-0.47,-0.45,-0.43,-0.41,-0.39,-0.37,-0.35,-0.33,-0.31,-0.3,-0.27,-0.24,-0.21,-0.18,-0.15,-0.24,-0.27,-0.3,-0.31,-0.33,-0.35,-0.37,-0.39,-0.41,-0.43,-0.45,-0.47,-0.49,-0.51,-0.53,-0.55,-0.57,-0.59,-0.61,-0.63,-0.65,-0.668,-0.6807,-0.6931,-0.7064,-0.7204,-0.7347,-0.75,-0.7653,-0.7772,-0.7881,-0.7981,-0.8044,-0.8107,-0.8165,-0.8198,-0.823,-0.8264,-0.8307,-0.84,-0.86,-0.88,-0.9,-0.92,-0.94,-0.96,-0.98,-1,-1.0104,-1.0136,-1.0166,-1.0163,-1.0159,-1.0156,-1.0154,-1.0151,-1.0148,-0.12,-0.09,-0.06,-0.03,0,0.03,0.06,0.09,0.12,0.15,0.18,0.21,0.24,0.27,0.3,0.33,0.36,0.39,0.42,0.45,0.48,0.51,0.54,0.57,0.6,0.63,0.66,0.69,0.72,0.75,0.78,0.81,0.84,0.87,0.9,0.93,0.96,0.99,1.02,1.05,1.08,1.11,1.14,1.17,1.2,1.23,1.26,1.29,1.32,1.35,1.38,1.41,1.44,1.47,1.5,1.53,1.56,1.59,1.62,1.65,1.68,1.71,1.74,1.77,1.8,1.83,1.86,1.89,1.92,1.95,1.98,2.01,2.04,2.07,2.1,2.13,2.16,2.19,2.22,2.25,2.28,2.31,2.34,2.37,2.4,2.43,2.46,2.49,2.52,2.55,2.58,2.61,2.64,2.67,2.7,2.73,2.76,2.79,2.82,2.85,2.88,2.91,2.94,2.97,3,3,2.97,2.94,2.91,2.88,2.85,2.82,2.79,2.76,2.73,2.7,2.67,2.64,2.61,2.58,2.55,2.52,2.49,2.46,2.43,2.4,2.37,2.34,2.31,2.28,2.25,2.22,2.19,2.16,2.13,2.1,2.07,2.04,2.01,1.98,1.95,1.92,1.89,1.86,1.83,1.8,1.77,1.74,1.71,1.68,1.65,1.62,1.59,1.56,1.53,1.5,1.47,1.44,1.41,1.38,1.35,1.32,1.29,1.26,1.23,1.2,1.17,1.14,1.11,1.08,1.05,1.02,0.99,0.96,0.93,0.9,0.87,0.84,0.81,0.78,0.75,0.72,0.69,0.66,0.63,0.6,0.57,0.54,0.51,0.48,0.45,0.42,0.39,0.36,0.33,0.3,0.27,0.24,0.21,0.18,0.15,0.12,0.09,0.06,0.03,0,-0.03,-0.06,-0.09,-0.12,-0.15,-0.18,-0.21];
Y_car_0 = [-0.9452,-0.9452,-0.9445,-0.9433,-0.9407,-0.9381,-0.9364,-0.9347,-0.9321,-0.9293,-0.916,-0.8991,-0.8902,-0.8812,-0.8723,-0.8634,-0.8544,-0.8454,-0.8364,-0.8193,-0.801,-0.7831,-0.7661,-0.7491,-0.7264,-0.696,-0.675,-0.65,-0.625,-0.6,-0.575,-0.55,-0.525,-0.5,-0.475,-0.45,-0.425,-0.4,-0.375,-0.35,-0.325,-0.3,-0.275,-0.25,-0.225,-0.2,-0.175,-0.15,-0.125,-0.1,-0.075,-0.05,-0.025,0,-0,0.025,0.05,0.075,0.1,0.125,0.15,0.175,0.2,0.225,0.25,0.275,0.3,0.325,0.35,0.375,0.4,0.425,0.45,0.475,0.5,0.525,0.55,0.575,0.6,0.625,0.65,0.675,0.696,0.7264,0.7491,0.7661,0.7831,0.801,0.8193,0.8364,0.8454,0.8544,0.8634,0.8723,0.8812,0.8902,0.8991,0.916,0.9293,0.9321,0.9347,0.9364,0.9381,0.9407,0.9433,0.9445,-0.01,-0.04,-0.07,-0.1,-0.13,-0.16,-0.19,-0.22,-0.25,-0.2795,-0.3031,-0.3195,-0.3285,-0.3376,-0.3457,-0.347,-0.3483,-0.3496,-0.355,-0.38,-0.405,-0.43,-0.455,-0.48,-0.505,-0.53,-0.555,-0.58,-0.605,-0.63,-0.655,-0.68,-0.705,-0.73,-0.755,-0.78,-0.7994,-0.8209,-0.8424,-0.8522,-0.8598,-0.8673,-0.8756,-0.8845,-0.8934,-0.9024,-0.9135,-0.9258,-0.9381,-0.9409,-0.9434,-0.946,-0.9485,-0.95,-0.9501,-0.9505,-0.9509,-0.9513,-0.9517,-0.9523,0.9509,0.9505,0.9501,0.95,0.9485,0.946,0.9434,0.9409,0.9381,0.9258,0.9135,0.9024,0.8934,0.8845,0.8756,0.8673,0.8598,0.8522,0.8424,0.8209,0.7994,0.78,0.755,0.73,0.705,0.68,0.655,0.63,0.605,0.58,0.555,0.53,0.505,0.48,0.455,0.43,0.405,0.38,0.355,0.3496,0.3483,0.347,0.3457,0.3376,0.3285,0.3195,0.3031,0.2795,0.25,0.22,0.19,0.16,0.13,0.1,0.07,0.04,0.01,-0.9529,-0.9534,-0.954,-0.9545,-0.9551,-0.9557,-0.9561,-0.9566,-0.9571,-0.9576,-0.9581,-0.9585,-0.959,-0.9595,-0.9576,-0.9557,-0.9538,-0.9518,-0.9499,-0.9479,-0.9461,-0.9461,-0.9461,-0.9461,-0.9461,-0.9461,-0.9461,-0.9457,-0.9429,-0.9401,-0.9373,-0.9345,-0.9316,-0.9288,-0.926,-0.9245,-0.9235,-0.9226,-0.9216,-0.9207,-0.9197,-0.9188,-0.9178,-0.9185,-0.9193,-0.9202,-0.9211,-0.9219,-0.9228,-0.9233,-0.9234,-0.9236,-0.9237,-0.9239,-0.9241,-0.9243,-0.9246,-0.9249,-0.9251,-0.9254,-0.9259,-0.9269,-0.928,-0.9291,-0.9301,-0.9312,-0.9334,-0.9364,-0.9394,-0.9424,-0.9454,-0.9484,-0.9495,-0.9495,-0.9495,-0.9495,-0.9495,-0.9496,-0.95,-0.9504,-0.9508,-0.9512,-0.9516,-0.9521,-0.9526,-0.9532,-0.9537,-0.9543,-0.9541,-0.9538,-0.9535,-0.9533,-0.9531,-0.9531,-0.9531,-0.9531,-0.953,-0.9523,-0.9515,-0.9508,-0.95,-0.9486,-0.9472,-0.9461,0.9452,0.9452,0.9461,0.9472,0.9486,0.95,0.9508,0.9515,0.9523,0.953,0.9531,0.9531,0.9531,0.9531,0.9533,0.9535,0.9538,0.9541,0.9543,0.9537,0.9532,0.9526,0.9521,0.9516,0.9512,0.9508,0.9504,0.95,0.9496,0.9495,0.9495,0.9495,0.9495,0.9495,0.9484,0.9454,0.9424,0.9394,0.9364,0.9334,0.9312,0.9301,0.9291,0.928,0.9269,0.9259,0.9254,0.9251,0.9249,0.9246,0.9243,0.9241,0.9239,0.9237,0.9236,0.9234,0.9233,0.9228,0.9219,0.9211,0.9202,0.9193,0.9185,0.9178,0.9188,0.9197,0.9207,0.9216,0.9226,0.9235,0.9245,0.926,0.9288,0.9316,0.9345,0.9373,0.9401,0.9429,0.9457,0.9461,0.9461,0.9461,0.9461,0.9461,0.9461,0.9461,0.9479,0.9499,0.9518,0.9538,0.9557,0.9576,0.9595,0.959,0.9585,0.9581,0.9576,0.9571,0.9566,0.9561,0.9557,0.9551,0.9545,0.954,0.9534,0.9529,0.9523,0.9517,0.9513];
X_car_1 = [3.7843,3.5819,3.5819,3.1132,3.143,3.126,3.156,3.1857,3.2149,3.243,3.2952,3.3185,3.2709,3.3063,3.3337,3.3611,3.3885,3.4158,3.4319,3.4479,3.464,3.4801,3.502,3.5243,3.547,3.5699,3.5939,3.6144,3.6337,3.6518,3.6687,3.6842,3.6983,3.711,3.7223,3.7322,3.7405,3.7473,3.7526,3.7564,3.7585,3.7592,3.7651,3.7687,3.7717,3.7741,3.7764,3.7776,3.7787,3.7797,3.7806,3.7814,3.7821,3.7826,3.7836,3.7841,3.7843,3.7841,3.7836,3.7826,3.7821,3.7814,3.7806,3.7797,3.7787,3.7776,3.7764,3.7741,3.7717,3.7687,3.7651,3.7592,3.7585,3.7564,3.7526,3.7473,3.7405,3.7322,3.7223,3.711,3.6983,3.6842,3.6687,3.6518,3.6337,3.6144,3.5939,3.5699,3.547,3.5243,3.502,3.4801,3.464,3.4479,3.4319,3.4158,3.3885,3.3611,3.3337,3.3063,3.2709,3.3185,3.2952,3.243,3.2149,3.1857,3.156,3.126,3.143,3.1132,3.0834,3.0535,3.0236,2.9937,-1.2147,-1.2149,-1.2152,-1.2154,-1.2157,-1.2135,-1.2113,-1.2086,-1.2056,-1.2028,-1.1999,-1.1971,-1.1942,-1.1914,-1.1885,-1.1726,-1.1626,-1.1496,-1.1367,-1.1237,-1.1107,-1.0977,-1.0848,-1.0651,-1.0512,-1.0345,-1.0177,-1.0079,-1.0011,-0.9929,-0.9834,-0.9727,-0.9606,-0.9473,-0.9371,-0.9212,-0.9057,-0.8908,-0.8765,-0.864,-0.8497,-0.8339,-0.8164,-0.7974,-0.777,-0.7553,-0.7323,-0.7173,-0.7023,-0.6872,-0.6722,-0.644,-0.6161,-0.5885,-0.5612,-0.5784,-0.5955,-0.5723,-0.5476,-0.5217,-0.4947,-0.4668,-0.4381,-0.4088,-0.379,-0.3491,-0.3206,-0.2905,-0.2606,-0.2306,-0.2006,-0.1706,-0.1406,-0.4381,-0.4668,-0.4947,-0.5217,-0.5476,-0.5723,-0.5955,-0.5784,-0.5612,-0.5885,-0.6161,-0.644,-0.6722,-0.6872,-0.7023,-0.7173,-0.7323,-0.7553,-0.777,-0.7974,-0.8164,-0.8339,-0.8497,-0.864,-0.8765,-0.8908,-0.9057,-0.9212,-0.9371,-0.9473,-0.9606,-0.9727,-0.9834,-0.9929,-1.0011,-1.0079,-1.0177,-1.0345,-1.0512,-1.0651,-1.0848,-1.0977,-1.1107,-1.1237,-1.1367,-1.1496,-1.1626,-1.1726,-1.1885,-1.1914,-1.1942,-1.1971,-1.1999,-1.2028,-1.2056,-1.2086,-1.2113,-1.2135,-1.2157,-1.2154,-1.2152,-1.2149,-1.2147,-0.1106,-0.0806,-0.0506,-0.0206,0.0094,0.0394,0.0694,0.0994,0.1295,0.1595,0.1895,0.2195,0.2495,0.2794,0.3094,0.3394,0.3694,0.3994,0.4294,0.4594,0.4894,0.5194,0.5494,0.5656,0.5817,0.6117,0.6417,0.6717,0.7017,0.7317,0.7617,0.7917,0.8217,0.8516,0.8816,0.9116,0.9416,0.9716,1.0016,1.0316,1.0616,1.0916,1.1216,1.1516,1.1816,1.2116,1.2416,1.2716,1.3016,1.3316,1.3616,1.3916,1.4216,1.4516,1.4816,1.5116,1.5416,1.5716,1.6016,1.6316,1.6616,1.6699,1.6998,1.7298,1.7597,1.7897,1.8197,1.8496,1.8796,1.9096,1.9396,1.9696,1.9995,2.0295,2.0595,2.0895,2.1195,2.1495,2.1795,2.2095,2.2395,2.2695,2.2995,2.3295,2.3463,2.3763,2.4063,2.4363,2.4663,2.4963,2.5263,2.5563,2.5863,2.6163,2.6463,2.6763,2.7063,2.7363,2.7663,2.7963,2.8263,2.8437,2.8737,2.9037,2.9337,2.9637,2.9937,3.0236,3.0535,3.0834,2.9637,2.9337,2.9037,2.8737,2.8437,2.8263,2.7963,2.7663,2.7363,2.7063,2.6763,2.6463,2.6163,2.5863,2.5563,2.5263,2.4963,2.4663,2.4363,2.4063,2.3763,2.3463,2.3295,2.2995,2.2695,2.2395,2.2095,2.1795,2.1495,2.1195,2.0895,2.0595,2.0295,1.9995,1.9696,1.9396,1.9096,1.8796,1.8496,1.8197,1.7897,1.7597,1.7298,1.6998,1.6699,1.6616,1.6316,1.6016,1.5716,1.5416,1.5116,1.4816,1.4516,1.4216,1.3916,1.3616,1.3316,1.3016,1.2716,1.2416,1.2116,1.1816,1.1516,1.1216,1.0916,1.0616,1.0316,1.0016,0.9716,0.9416,0.9116,0.8816,0.8516,0.8217,0.7917,0.7617,0.7317,0.7017,0.6717,0.6417,0.6117,0.5817,0.5656,0.5494,0.5194,0.4894,0.4594,0.4294,0.3994,0.3694,0.3394,0.3094,0.2794,0.2495,0.2195,0.1895,0.1595,0.1295,0.0994,0.0694,0.0394,0.0094,-0.0206,-0.0506,-0.0806,-0.1106,-0.1406,-0.1706,-0.2006,-0.2306,-0.2606,-0.2905,-0.3206,-0.3491,-0.379,-0.4088];
Y_car_1 = [0.0124,-0.8903,0.8903,-1.1372,-1.1336,-1.1349,-1.1343,-1.1304,-1.1233,-1.113,-1.0835,-1.0647,-1.0993,-1.0707,-1.0585,-1.0463,-1.034,-1.0216,-1.0113,-1.001,-0.9907,-0.9805,-0.96,-0.9399,-0.9202,-0.9009,-0.8797,-0.8578,-0.8349,-0.8109,-0.7861,-0.7604,-0.734,-0.7068,-0.679,-0.6507,-0.6219,-0.5927,-0.5631,-0.5334,-0.5034,-0.4735,-0.4395,-0.4097,-0.3799,-0.35,-0.312,-0.282,-0.252,-0.222,-0.192,-0.162,-0.132,-0.102,-0.072,-0.042,-0.0124,0.042,0.072,0.102,0.132,0.162,0.192,0.222,0.252,0.282,0.312,0.35,0.3799,0.4097,0.4395,0.4735,0.5034,0.5334,0.5631,0.5927,0.6219,0.6507,0.679,0.7068,0.734,0.7604,0.7861,0.8109,0.8349,0.8578,0.8797,0.9009,0.9202,0.9399,0.96,0.9805,0.9907,1.001,1.0113,1.0216,1.034,1.0463,1.0585,1.0707,1.0993,1.0647,1.0835,1.113,1.1233,1.1304,1.1343,1.1349,1.1336,1.1372,1.1404,1.1432,1.1455,1.1473,0.0018,-0.0248,-0.0514,-0.078,-0.1046,-0.1258,-0.1469,-0.1793,-0.1993,-0.2254,-0.2516,-0.2778,-0.3039,-0.3301,-0.3563,-0.3757,-0.3869,-0.4022,-0.4175,-0.4328,-0.4481,-0.4634,-0.4787,-0.4859,-0.4939,-0.5016,-0.5092,-0.5206,-0.5498,-0.5787,-0.6072,-0.6352,-0.6626,-0.6895,-0.7074,-0.7328,-0.7585,-0.7845,-0.813,-0.8402,-0.8666,-0.8921,-0.9165,-0.9397,-0.9617,-0.9824,-1.0016,-1.0099,-1.0182,-1.0265,-1.0349,-1.0451,-1.056,-1.0678,-1.0802,-1.0678,-1.0553,-1.0743,-1.0914,-1.1065,-1.1195,-1.1304,-1.1391,-1.1455,-1.1495,-1.1513,-1.1499,-1.1501,-1.1503,-1.1504,-1.1505,-1.1506,-1.1507,1.1391,1.1304,1.1195,1.1065,1.0914,1.0743,1.0553,1.0678,1.0802,1.0678,1.056,1.0451,1.0349,1.0265,1.0182,1.0099,1.0016,0.9824,0.9617,0.9397,0.9165,0.8921,0.8666,0.8402,0.813,0.7845,0.7585,0.7328,0.7074,0.6895,0.6626,0.6352,0.6072,0.5787,0.5498,0.5206,0.5092,0.5016,0.4939,0.4859,0.4787,0.4634,0.4481,0.4328,0.4175,0.4022,0.3869,0.3757,0.3563,0.3301,0.3039,0.2778,0.2516,0.2254,0.1993,0.1793,0.1469,0.1258,0.1046,0.078,0.0514,0.0248,-0.0018,-1.1508,-1.1508,-1.1508,-1.1508,-1.1508,-1.1507,-1.1507,-1.1506,-1.1505,-1.1503,-1.1502,-1.15,-1.1498,-1.1495,-1.1493,-1.149,-1.1487,-1.1484,-1.1481,-1.1477,-1.1473,-1.1469,-1.1465,-1.1463,-1.146,-1.1451,-1.1442,-1.1434,-1.1426,-1.1418,-1.1411,-1.1404,-1.1398,-1.1391,-1.1385,-1.138,-1.1375,-1.137,-1.1365,-1.1361,-1.1357,-1.1354,-1.1351,-1.1348,-1.1346,-1.1343,-1.1342,-1.134,-1.1339,-1.1339,-1.1338,-1.1338,-1.1339,-1.1339,-1.134,-1.1342,-1.1343,-1.1345,-1.1348,-1.1351,-1.1354,-1.1352,-1.1371,-1.1389,-1.1406,-1.1422,-1.1437,-1.1451,-1.1463,-1.1475,-1.1485,-1.1495,-1.1503,-1.151,-1.1516,-1.1521,-1.1525,-1.1528,-1.153,-1.153,-1.153,-1.1529,-1.1526,-1.1522,-1.1519,-1.1522,-1.1526,-1.1528,-1.153,-1.1531,-1.1532,-1.1532,-1.1531,-1.153,-1.1528,-1.1526,-1.1523,-1.152,-1.1516,-1.1511,-1.1506,-1.1501,-1.1504,-1.1503,-1.1497,-1.1488,-1.1473,-1.1455,-1.1432,-1.1404,1.1488,1.1497,1.1503,1.1504,1.1501,1.1506,1.1511,1.1516,1.152,1.1523,1.1526,1.1528,1.153,1.1531,1.1532,1.1532,1.1531,1.153,1.1528,1.1526,1.1522,1.1519,1.1522,1.1526,1.1529,1.153,1.153,1.153,1.1528,1.1525,1.1521,1.1516,1.151,1.1503,1.1495,1.1485,1.1475,1.1463,1.1451,1.1437,1.1422,1.1406,1.1389,1.1371,1.1352,1.1354,1.1351,1.1348,1.1345,1.1343,1.1342,1.134,1.1339,1.1339,1.1338,1.1338,1.1339,1.1339,1.134,1.1342,1.1343,1.1346,1.1348,1.1351,1.1354,1.1357,1.1361,1.1365,1.137,1.1375,1.138,1.1385,1.1391,1.1398,1.1404,1.1411,1.1418,1.1426,1.1434,1.1442,1.1451,1.146,1.1463,1.1465,1.1469,1.1473,1.1477,1.1481,1.1484,1.1487,1.149,1.1493,1.1495,1.1498,1.15,1.1502,1.1503,1.1505,1.1506,1.1507,1.1507,1.1508,1.1508,1.1508,1.1508,1.1508,1.1507,1.1506,1.1505,1.1504,1.1503,1.1501,1.1499,1.1513,1.1495,1.1455];

car_0 = [X_car_0;Y_car_0];
car_1 = [X_car_1;Y_car_1];

X = [];
Y = [];
for i =0:249
    for j = 0:249
        x = 12.45 - 0.1 * i;
        y = 12.45 - 0.1 * j;
        X = [X,x];
        Y = [Y,y];
    end
end

index_L = 335;
Flag_plot_veh = true;
 for index_plan = 0
     fid = fopen('plan.txt', 'rb');
        %fid = fopen('D:\Work\测试\04UXE\1206\1206\1057\plan.txt', 'rb');
    
    request = 1;
    log_list = 0;
    
    path = zeros(300,5);
    while ~feof(fid)
        
        log_list = log_list + 1;
        tline = fgetl(fid);
        
        if log_list == (request-1)*index_L+12
            num_str = regexp(tline,'\-?\d*\.?\d*','match');
            num = str2double(num_str);
            park_ = num;
        elseif log_list == (request-1)*index_L+14
            num_str = regexp(tline,'\-?\d*\.?\d*','match');
            num = str2double(num_str);
            START = num;
        elseif log_list == (request-1)*index_L+15
            num_str = regexp(tline,'\-?\d*\.?\d*','match');
            num = str2double(num_str);
            END = num;
        elseif log_list == (request-1)*index_L+20
            num_str = regexp(tline,'\-?\d*\.?\d*','match');
            num = str2double(num_str);
            map = num(1:62500);
        elseif log_list == (request-1)*index_L+27
            num_str = regexp(tline,'\-?\d*\.?\d*','match');
            num = str2double(num_str);
            AstarOrGeo = num(end);
        elseif log_list == (request-1)*index_L+28
            num_str = regexp(tline,'\-?\d*\.?\d*','match');
            num = str2double(num_str);
            CloseSizeMax = num(3);
        elseif log_list == (request-1)*index_L+29
            num_str = regexp(tline,'\-?\d*\.?\d*','match');
            num = str2double(num_str);
            gplan_time = num(1);
            aplan_time = num(2);
        elseif (log_list >= (request-1)*index_L+35) && (log_list <= (request-1)*index_L+334)
            num_str = regexp(tline,'\-?\d*\.?\d*','match');
            num = str2double(num_str);
            path(log_list-((request-1)*index_L+35)+1,:) = num;
        end
       %% 
        if (mod(log_list,331) == 0)%||(mod(log_list,327) == 25)
            status = reshape(map,250,250);
            Map = status';
            X_car = reshape(X,250,250);
            X_car = X_car';
            Y_car = reshape(Y,250,250);
            Y_car = Y_car';
            
            park = [park_(1:2);park_(3:4);park_(5:6);park_(7:8);park_(1:2)];
            
            figure(request)
            if AstarOrGeo == 0
                title(['几何','      ','plantime=',num2str(gplan_time)],'fontsize',10);hold on;
            elseif AstarOrGeo == 1
                title(['Astar','      ','plantime=',num2str(aplan_time),'      ','CloseSizeMax=',num2str(CloseSizeMax)],'fontsize',10);hold on;
            end
            for index_x = 1:250
                for index_y = 1:250
                    if Map(index_x,index_y) == 0 
                        plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.r');
                        rectangle('Position',[X_car(index_x,index_y)-0.05,Y_car(index_x,index_y)-0.05,0.1,0.1],'EdgeColor','r');hold on;
                    elseif Map(index_x,index_y) == 8
                        plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.r');
                        rectangle('Position',[X_car(index_x,index_y)-0.05,Y_car(index_x,index_y)-0.05,0.1,0.1],'EdgeColor','r');hold on;
%                     elseif Map(index_x,index_y) == 2
%                         plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.','Color',[0.5,0.5,0.5]);hold on;
                    elseif Map(index_x,index_y) == 7
                        plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.b');
                        rectangle('Position',[X_car(index_x,index_y)-0.05,Y_car(index_x,index_y)-0.05,0.1,0.1],'EdgeColor','y');hold on;
                    elseif Map(index_x,index_y) == 6
                        plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.r');
                        rectangle('Position',[X_car(index_x,index_y)-0.05,Y_car(index_x,index_y)-0.05,0.1,0.1],'EdgeColor','c');hold on;
                    elseif Map(index_x,index_y) == 3
                        plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.b');
                        rectangle('Position',[X_car(index_x,index_y)-0.05,Y_car(index_x,index_y)-0.05,0.1,0.1],'EdgeColor','b');hold on;
                    elseif Map(index_x,index_y) == 4
                        plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.k');
                        rectangle('Position',[X_car(index_x,index_y)-0.05,Y_car(index_x,index_y)-0.05,0.1,0.1],'EdgeColor','k');hold on;
                    elseif Map(index_x,index_y) == 5
                        plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.c');
                        rectangle('Position',[X_car(index_x,index_y)-0.05,Y_car(index_x,index_y)-0.05,0.1,0.1],'EdgeColor','c');hold on;
                    elseif Map(index_x,index_y) == 9
                        plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.','Color',[0.6,0.2,0.5]);hold on;
                        rectangle('Position',[X_car(index_x,index_y)-0.05,Y_car(index_x,index_y)-0.05,0.1,0.1],'EdgeColor',[0.6,0.2,0.5]);hold on;
                    end
                end
            end
            
            for pathplan_index = 1:300
                if path(pathplan_index,5) == 0
                    break;
                end
            end
            plot(path(1:pathplan_index-1,1)*0.01,path(1:pathplan_index-1,2)*0.01,'k');
            if pathplan_index <= 1
                pathplan_index = 2;
            end
            path_end = path(pathplan_index-1,:);
            path_end = [path_end(1)*0.01,path_end(2)*0.01,path_end(3)*pi/180];
            
%             [START(1),START(2)] = CoordinateTrans(Nav_pos(1)/100, Nav_pos(2)/100, Fusion_pos(1)/100, Fusion_pos(2)/100,mod2pi(Fusion_pos(3)*3.141592653589793/180));
%             START(3) = mod2pi(Nav_pos(3)*3.141592653589793/180 - Fusion_pos(3)*3.141592653589793/180);
            CAR_0s = [cos(START(3)),-sin(START(3));sin(START(3)),cos(START(3))]*car_0+[START(1);START(2)];
            CAR_1s = [cos(START(3)),-sin(START(3));sin(START(3)),cos(START(3))]*car_1+[START(1);START(2)];
            
            CAR_0 = [cos(END(3)),-sin(END(3));sin(END(3)),cos(END(3))]*car_0+[END(1);END(2)];
            CAR_1 = [cos(END(3)),-sin(END(3));sin(END(3)),cos(END(3))]*car_1+[END(1);END(2)];
            
            plot(START(1),START(2),'ob');
            plot(END(1),END(2),'or');
            plot(CAR_0s(1,:),CAR_0s(2,:),'.b');hold on;
            plot(CAR_1s(1,:),CAR_1s(2,:),'.b');hold on;

            plot(CAR_0(1,:),CAR_0(2,:),'.y');hold on;
            plot(CAR_1(1,:),CAR_1(2,:),'.y');hold on;

            plot(park(:,1),park(:,2),'g');hold on;
            %%
            for pathplan_index = 1:300
                if path(pathplan_index,5) == 0
                    break;
                end
            end
            plot(path(1:pathplan_index-1,1)*0.01,path(1:pathplan_index-1,2)*0.01,'k');
            if pathplan_index <= 1
                pathplan_index = 2;
            end
            path_end = path(pathplan_index-1,:);
            path_end = [path_end(1)*0.01,path_end(2)*0.01,path_end(3)*pi/180];
%%
             if Flag_plot_veh
                path(:,1) = path(:,1)*0.01;
                path(:,2) = path(:,2)*0.01;
                path(:,3) = path(:,3)*pi/180;

                i=1;
                CAR_0 = [cos(path(i,3)),-sin(path(i,3));sin(path(i,3)),cos(path(i,3))]*car_0+[path(i,1);path(i,2)];
                CAR_1 = [cos(path(i,3)),-sin(path(i,3));sin(path(i,3)),cos(path(i,3))]*car_1+[path(i,1);path(i,2)];
                h1=plot(CAR_0(1,:),CAR_0(2,:),'.k');hold on;
                h2=plot(CAR_1(1,:),CAR_1(2,:),'.b');hold on;
                
                len=3.585+1.0166+0.4;
                wid=1.905+0.4;
                theta = linspace(0, 2*pi, 100);
                radius3 = sqrt((wid/2)^2+(len/6)^2)-0.14; 
                x = radius3 * cos(theta); % x 坐标
                y = radius3 * sin(theta); % y 坐标
                c31 = plot(x, y, 'g');
                c32 = plot(x, y, 'g');
                c33 = plot(x, y, 'g');

                radius8 = sqrt((wid/4)^2+(len/8)^2);
                x = radius8 * cos(theta); % x 坐标
                y = radius8 * sin(theta); % y 坐标
                c81 = plot(x, y, 'r');
                c82 = plot(x, y, 'r');
                c83 = plot(x, y, 'r');
                c84 = plot(x, y, 'r');
                c85 = plot(x, y, 'r');
                c86 = plot(x, y, 'r');
                c87 = plot(x, y, 'r');
                c88 = plot(x, y, 'r');

                for i = 1 : length(path(:,1))
                     if ~(path(i,1) == 0 && path(i,2) == 0 && path(i,3) == 0 && path(i,4) == 0 && path(i,5) == 0)
                        CAR_0 = [cos(path(i,3)),-sin(path(i,3));sin(path(i,3)),cos(path(i,3))]*car_0+[path(i,1);path(i,2)];
                        CAR_1 = [cos(path(i,3)),-sin(path(i,3));sin(path(i,3)),cos(path(i,3))]*car_1+[path(i,1);path(i,2)];
                        h1.XData = CAR_0(1,:); 
                        h1.YData = CAR_0(2,:);
                        h2.XData = CAR_1(1,:); 
                        h2.YData = CAR_1(2,:);
                        
                        rect_x=len/2-(0.99+0.2);
                        offset=len/3;
                        
                        cpx=path(i,1);
                        cpy=path(i,2);
                        cosphi=cos(path(i,3));
                        sinphi=sin(path(i,3));

                        center_x1 = (rect_x+offset-0.25) * cosphi + cpx;
                        center_y1 = (rect_x+offset-0.25) * sinphi + cpy;
                        center_x2 = (rect_x+0.08) * cosphi + cpx;
	                    center_y2 = (rect_x+0.08) * sinphi + cpy;
                        center_x3 = (rect_x-offset+0.4) * cosphi + cpx;
	                    center_y3 = (rect_x-offset+0.4) * sinphi + cpy;
                        
                        raidus=radius3;    
                        c31.XData = center_x1 + raidus * cos(theta); % x 坐标
                        c31.YData = center_y1 + raidus * sin(theta); % y 坐标
                        c32.XData = center_x2 + raidus * cos(theta);
                        c32.YData = center_y2 + raidus * sin(theta); 
                        c33.XData = center_x3 + raidus * cos(theta);
                        c33.YData = center_y3 + raidus * sin(theta); 
                        
                        rect_y=wid/4;
                        offset=len/8;

                        center_x1 = (rect_x+3*offset-0.26) * cosphi - (rect_y-0.33) * sinphi + cpx;
                        center_y1 = (rect_x+3*offset-0.26) * sinphi + (rect_y-0.33) * cosphi + cpy;
                        center_x2 = (rect_x+offset-0.06) * cosphi - (rect_y-0.2) * sinphi + cpx;
                        center_y2 = (rect_x+offset-0.06) * sinphi + (rect_y-0.2) * cosphi + cpy;
                        center_x3 = (rect_x-offset+0.1) * cosphi - (rect_y-0.2) * sinphi + cpx;
                        center_y3 = (rect_x-offset+0.1) * sinphi + (rect_y-0.2) * cosphi + cpy;
                        center_x4 = (rect_x-3*offset+0.32) * cosphi - (rect_y-0.33) * sinphi + cpx;
                        center_y4 = (rect_x-3*offset+0.32) * sinphi + (rect_y-0.33) * cosphi + cpy;
                    
                        rect_y=-wid/4;
                        center_x5 = (rect_x+3*offset-0.26) * cosphi - (rect_y+0.33) * sinphi + cpx;
                        center_y5 = (rect_x+3*offset-0.26) * sinphi + (rect_y+0.33) * cosphi + cpy;
                        center_x6 = (rect_x+offset-0.06) * cosphi - (rect_y+0.2) * sinphi + cpx;
                        center_y6 = (rect_x+offset-0.06) * sinphi + (rect_y+0.2) * cosphi + cpy;
                        center_x7 = (rect_x-offset+0.1) * cosphi - (rect_y+0.2) * sinphi + cpx;
                        center_y7 = (rect_x-offset+0.1) * sinphi + (rect_y+0.2) * cosphi + cpy;
                        center_x8 = (rect_x-3*offset+0.32) * cosphi - (rect_y+0.33) * sinphi + cpx;
                        center_y8 = (rect_x-3*offset+0.32) * sinphi + (rect_y+0.33) * cosphi + cpy;
                        
                        radius=radius8;
                        c81.XData = center_x1 + (radius+0.1) * cos(theta); % x 坐标
                        c81.YData = center_y1 + (radius+0.1) * sin(theta); % y 坐标
                        c82.XData = center_x2 + radius * cos(theta);
                        c82.YData = center_y2 + radius * sin(theta); 
                        c83.XData = center_x3 + radius * cos(theta);
                        c83.YData = center_y3 + radius * sin(theta); 
                        c84.XData = center_x4 + (radius+0.1) * cos(theta); % x 坐标
                        c84.YData = center_y4 + (radius+0.1) * sin(theta); % y 坐标
                        c85.XData = center_x5 + (radius+0.1) * cos(theta);
                        c85.YData = center_y5 + (radius+0.1) * sin(theta); 
                        c86.XData = center_x6 + radius * cos(theta);
                        c86.YData = center_y6 + radius * sin(theta); 
                        c87.XData = center_x7 + radius * cos(theta);
                        c87.YData = center_y7 + radius * sin(theta); 
                        c88.XData = center_x8 + (radius+0.1) * cos(theta);
                        c88.YData = center_y8 + (radius+0.1) * sin(theta); 

                        plot(cpx, cpy, 'r.');
%                         plot(center_x1, center_y1, 'r.');
%                         plot(center_x2, center_y2, 'r.');
%                         plot(center_x3, center_y3, 'r.');
                        pause();
                                         
%                         plot(CAR_0(1,:),CAR_0(2,:),'.k');hold on;
%                         plot(CAR_1(1,:),CAR_1(2,:),'.b');hold on;
                        
                     end
                 end
            end
            %%
            path = zeros(300,5);
%             plot(park_12(:,1),park_12(:,2),'k');hold on;
            axis equal
            xlim([-12.5,12.5]);ylim([-12.5,12.5]);
            drawnow;
            request = request +1;
        end
    end
    %%
    if (mod(log_list,336) ~= 0)
        status = reshape(map,250,250);
        Map = status';
        X_car = reshape(X,250,250);
        X_car = X_car';
        Y_car = reshape(Y,250,250);
        Y_car = Y_car';

        park = [park_(1:2);park_(3:4);park_(5:6);park_(7:8);park_(1:2)];

        figure(request)
%         if AstarOrGeo == 0
%             title(['几何','      ','plantime=',num2str(gplan_time)],'fontsize',10);hold on;
%         elseif AstarOrGeo == 1
%             title(['Astar','      ','plantime=',num2str(aplan_time),'      ','CloseSizeMax=',num2str(CloseSizeMax)],'fontsize',10);hold on;
%         end
        for index_x = 1:250
            for index_y = 1:250
                if Map(index_x,index_y) == 0 
                    plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.r');
                    rectangle('Position',[X_car(index_x,index_y)-0.05,Y_car(index_x,index_y)-0.05,0.1,0.1],'EdgeColor','r');hold on;
                elseif Map(index_x,index_y) == 8
                    plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.r');
                    rectangle('Position',[X_car(index_x,index_y)-0.05,Y_car(index_x,index_y)-0.05,0.1,0.1],'EdgeColor','r');hold on;
%                 elseif Map(index_x,index_y) == 2
%                     plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.','Color',[0.5,0.5,0.5]);hold on;
                elseif Map(index_x,index_y) == 7
                    plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.b');
                    rectangle('Position',[X_car(index_x,index_y)-0.05,Y_car(index_x,index_y)-0.05,0.1,0.1],'EdgeColor','y');hold on;
                elseif Map(index_x,index_y) == 6
                    plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.r');
                        rectangle('Position',[X_car(index_x,index_y)-0.05,Y_car(index_x,index_y)-0.05,0.1,0.1],'EdgeColor','c');hold on;
                elseif Map(index_x,index_y) == 3
                    plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.b');
                    rectangle('Position',[X_car(index_x,index_y)-0.05,Y_car(index_x,index_y)-0.05,0.1,0.1],'EdgeColor','b');hold on;
                elseif Map(index_x,index_y) == 4
                    plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.k');
                    rectangle('Position',[X_car(index_x,index_y)-0.05,Y_car(index_x,index_y)-0.05,0.1,0.1],'EdgeColor','k');hold on;
                elseif Map(index_x,index_y) == 5
                    plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.c');
                    rectangle('Position',[X_car(index_x,index_y)-0.05,Y_car(index_x,index_y)-0.05,0.1,0.1],'EdgeColor','c');hold on;
                elseif Map(index_x,index_y) == 9
                    plot(X_car(index_x,index_y),Y_car(index_x,index_y),'.','Color',[0.6,0.2,0.5]);hold on;
                    rectangle('Position',[X_car(index_x,index_y)-0.05,Y_car(index_x,index_y)-0.05,0.1,0.1],'EdgeColor',[0.6,0.2,0.5]);hold on;
                end
            end
        end
        CAR_0s = [cos(START(3)),-sin(START(3));sin(START(3)),cos(START(3))]*car_0+[START(1);START(2)];
        CAR_1s = [cos(START(3)),-sin(START(3));sin(START(3)),cos(START(3))]*car_1+[START(1);START(2)];

        CAR_0 = [cos(END(3)),-sin(END(3));sin(END(3)),cos(END(3))]*car_0+[END(1);END(2)];
        CAR_1 = [cos(END(3)),-sin(END(3));sin(END(3)),cos(END(3))]*car_1+[END(1);END(2)];
        plot(START(1),START(2),'ob');
        plot(END(1),END(2),'or');
        plot(CAR_0s(1,:),CAR_0s(2,:),'.b');hold on;
        plot(CAR_1s(1,:),CAR_1s(2,:),'.b');hold on;
        plot(CAR_0(1,:),CAR_0(2,:),'.y');hold on;
        plot(CAR_1(1,:),CAR_1(2,:),'.y');hold on;
        plot(park(:,1),park(:,2),'g');hold on;
        
        for pathplan_index = 1:300
            if path(pathplan_index,5) == 0
                break;
            end
        end
        if pathplan_index <= 1
            pathplan_index = 2;
        end
        plot(path(1:pathplan_index-1,1)*0.01,path(1:pathplan_index-1,2)*0.01,'k');
        %             plot(park_12(:,1),park_12(:,2),'k');hold on;
        axis equal
        xlim([-12.5,12.5]);ylim([-12.5,12.5]);
    end
    fclose(fid);
%     pause
 end
 
 function [x,y] = CoordinateTrans(x_o,y_o,x_nav,y_nav,theta)
x = (x_o - x_nav) * cos(theta) + (y_o - y_nav) * sin(theta);
y = (y_o - y_nav) * cos(theta) - (x_o - x_nav) * sin(theta);
 end
function v = mod2pi(x)
%UNTITLED2 此处显示有关此函数的摘要
%   此处显示详细说明
v = rem(x,2*pi);
if v < -pi
    v = v+2*pi;
elseif v > pi
    v = v-2*pi;
end
end


